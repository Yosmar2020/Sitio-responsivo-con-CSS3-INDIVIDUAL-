@font-face {
  font-family: 'icomoon';
  src:  url('./fonts/icomoon.eot?8f0wr6');
  src:  url('./fonts/icomoon.eot?8f0wr6#iefix') format('embedded-opentype'),
    url('./fonts/icomoon.ttf') format('truetype'),
    url('./fonts/icomoon.woff') format('woff'),
    url('./fonts/icomoon.svg?8f0wr6#icomoon') format('svg');
  font-weight: normal;
  font-style: normal;
  font-display: block;
}

[class^="icon-"], [class*=" icon-"] {
  font-family: 'icomoon' !important;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon-menu:before {
  content: "\e900";
}

body{
  margin:0;
  font-family: 'Source Sans Pro', sans-serif;
  color: red;
  background-color: #038C65;
}
h1,h2,h3,h4,h5,h6{
  font-family: 'Fjalla One',sans-serif;
  font-weight: normal;
}
h1{
  margin: 0px;
  line-height: 1.5em;
  font-size: 40px;
  letter-spacing: -.2px;
  color:white
}
h2{
  color: white;
  text-transform: uppercase;
  font-family: 'Source Sans Pro', sans-serif;
  font-weight: bold;
  font-size: 24px;
  margin-bottom: 40px;
}
h3 {
color:#03CDDB;
}
h1 strong{
  color: #1b2127;
}
figure{
  margin: 0;
}
.header{
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-wrap: wrap;
  background-color:#1b2127;
  color: white;
  height: 70px;
}
.header a{
  color: white;
  text-decoration: none;
  display: flex;
  align-items: center;
  height: inherit;
  padding: 0px 10px;
}
.menu{
  height: inherit;
  background-color: #014029;
}
.menu ul{
  height: inherit;
  margin: 0;
  padding: 0;
  display: flex;
  list-style: none;
}
.menu ul li{
  margin: 0 20px;
  height: inherit;
  display: flex;
  align-items: center;
}
.header{
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-wrap: wrap;
  background-color:#014029;
  color: white;
  height: 70px;
}
.logo img{
  height: 50px;
  vertical-align: middle;
}
.footer{
  display: flex;
  color: white;
  background-color: #014029;
  align-items: center;
  justify-content: space-between;
  flex-wrap: wrap;
}
.event-title{
  margin-left: 20px;
}
.event-list{
  display: flex;
  flex-wrap: wrap;
}
.event{
  border: 1px ;
  margin: 1%;
  width: 48%;
  flex-shrink: 0;
  border-radius: 10px;
  overflow: hidden;
  background-color: #F2D5A0;
}
.event img{
  width: 480px;
  height: 200px;
  object-fit: cover;
}
.event-detail{
  margin:20px 40px;
  margin-top: -40px;
  background-color: whitesmoke;
  position: relative;
  padding: 20px;
  text-align: center;
}
.event p{
  text-align: left;
}
.event a{
  margin: 10px;
  border: 1px solid;
  padding: 5px 20px;
  text-decoration: none;
  color: #014029;
  border-radius: 5px;
}
.footer a{
  color: white;
  padding: 0 10 px;
}
.texto_footer{
  margin: 15px 15px;
}
.container{
  max-width: 1000px;
  flex: 1;
  margin: 0 auto;
  display: inherit;
  justify-content: inherit;
  align-items: inherit;
  height: inherit;
  flex-wrap: inherit;
}

.burger-button{
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color:rgba(0,0,0,.8);
  display: none;
  line-height: 40px;
  text-align: center;
  position: fixed;
  z-index: 10;
  left: 5px;
  top: 5px;
  color: white;
}

/*Código para el sitio web responsivo*/

/*Crear una función para sobrescribir css cuando el máximo ancho
de un elemento es 1024px
se utiliza la @media una regla para incluir un bloque de propiedades
CSS solo si una determinada condición es verdadera.*/
@media screen and (max-width: 1024px){
  .container{
/*padding establece el espacio de relleno requerido por todos los lados de un elemento*/
/*en este caso de la clase container*/
    padding: 0 1.5px;
  }
  .event-title{
/*margin establece el margen para los cuatro lados de la clase event-title*/    
    margin: 10px;
  }
  .event-detail h3{
/*font-size especifica la dimensión de la letra de la clse event-detail y el elemento h3*/
    font-size: 20 px;
  }
  .event-detail p{
/*font-size especifica la dimensión de la letra de la clse event-detail y el elemento p (parrafo)*/
    font-size: 18 px;
  }
} 

/*Crear una función para sobrescribir css cuando el máximo ancho
de un elemento es 768px(El que utilizaremos para pantallas pequeñas, como las de móviles)*/
@media screen and (max-width: 768px){
  .burger-button{
  /*display nos permite establecer el tipo de caja que el navegador empleará
  hace que el comportamiento del elemento sea como un bloque
  en este caso para el elemento burger-button*/
    display: block;
  }  
  h2{
  /*Modifica el color del texto del elemento (h2) */
    color: #A60321;
  }
  h3 {
   /*Modifica el color del texto del elemento (h3) */
    color: #A60321;
    }
    .header{
    /*Modifica el color del fondo en la clase header*/   
      background-color:  #1C2526;
    /*Modifica el color del texto en la clase header*/
      color: whitesmoke;
    /*Especifica la altura del area de contenido de un elemento*/
      height: 70px;
    }
  body{
     /*Modifica el color del texto en la clase body*/
    color: #590212;
    /*Modifica el color del fondo en la clase body*/   
    background-color: #94E9F2;
  }
  .event{
  /*Modifica el color del fondo en la clase event*/ 
    background-color: #590212;
  }
  .footer{
  /*Modifica el color del texto en la clase footer*/
    color: white;
  /*Modifica el color del fondo en la clase footer*/ 
    background-color: #1C2526;
  }
  .menu{
  /*font-size especifica la dimensión de la letra de la clse menu*/
    font-size: 0.5em; 
  /*position de CSS especifica cómo un elemento es posicionado en el documento
  elemento posicionado absolutamente es un elemento cuyo valor
  computado de  position es absolute o fixed*/
    position: fixed;
  /*Modifica el color del fondo en la clase menu*/ 
    background-color:rgba(166, 3, 33, .5);
  /*z-index indica el orden de un elemento posicionado y sus descendientes*/
    z-index: 1;
  /*permite desplazar un elemento respecto a su posición original 
  tomando como referencia el borde superior del elemento*/
    top: 0;
  /*bottom permite desplazar un elemento respecto a su posición 
  original tomando como referencia el borde inferior del elemento.*/
    bottom: 0;
  /*left permite desplazar un elemento respecto a su posición 
  original tomando como referencia el borde izquierdo del elemento*/
    left: -100vw;
  /*width especifica la anchura del area de contenido de un elemento*/
    width: 50%;
  /*height especifica la altura del area de contenido de un elemento.*/
    height: 100%;
  /* permite  acomodarse a diferentes tamaños de pantalla y diferentes dispositivos*/
    display: flex;
  /* Cambia el tamaño del contenedor o elemento anidado y el elemento anidado 
  siempre permanece centrado.*/
    align-items: center;
  /*justify-content para alinear el elemento en el eje principal*/
    justify-content: center;
  /*Permite definir la transición entre dos estados de un elemento. */ 
    transition: .3s;
  }
  /*Representa un elemento (como un botón) que el usuario está activando. */
  .menu.is-active{
  /*left especifica parte de la posición de un elemento*/
    left: 0;
  }
  .header{
    /*display nos permite establecer el tipo de caja que el navegador empleará
  hace que el comportamiento del elemento sea como un bloque*/
    display: block;
  /*height: auto; el elemento ajustará automáticamente su altura para permitir que su contenido 
  se muestre correctamente. */
    height: auto;
  }
  .header ul {
  /*initial es un valor permitido en todas las propiedades CSS.
  Fuerza la utilización del valor inicial de la propiedad para el elemento al cual se aplica.*/ 
    display: initial;
  }
  .header ul li{
   /*Especifica la altura del area de contenido de un elemento*/
    height: 50px;
   /*justify-content para alinear el elemento en el eje principal*/
    justify-content: center;
  }
  .header{
    /*Especifica la altura del area de contenido de un elemento*/
    height: 50px;
     /*justify-content para alinear el elemento en el eje principal*/
    justify-content: center;
  }
  .header a{
     /*justify-content para alinear el elemento en el eje principal*/
    justify-content: center;
    /*Especifica la altura del area de contenido de un elemento*/
    height: 40 px;
    /*font-size especifica la dimensión de la letra*/
    font-size: 1.5em;
    /*se usa para establecer el formato de texto a subrayado ( underline )*/
    text-decoration: underline;
    /*margin-bottom 
    es la propiedad de un elemento que establece el espacio requerido en la parte inferior de un elemento.*/
    margin-bottom: .5px;
  }
  .header .logo{
    /* text-align define cuatro valores para alinear los contenidos a la derecha ( right )
    en este caso para mover el logo cuando el menú desplegable aparezca*/
    text-align: right;
  }
  .event{
  /*width: auto; el elemento ajustará automáticamente su anchura para permitir que su contenido 
  se muestre correctamente. */
    width: auto;
  /* flex-shrink especifica el factor de contracción de un flex item.
  Los flex items se encogerán para llenar el contenedor de acuerdo a su número*/ 
    flex-shrink: initial;
  }
  .event img{
  /*width especifica la anchura del area de contenido de un elemento*/
    width: 100%;
  }
}


@media screen and (max-width: 425px){
  .event-detail h3{
    /*font-size especifica la dimensión de la letra */
    font-size: 15px;
  }
  .event-detail p{
    /*font-size especifica la dimensión de la letra */
    font-size: 13px;
  }
  .menu{
    /*width especifica la anchura del area de contenido de un elemento. */
    width: 90vw;
  }
  .event-detail a{
    /*padding establece el espacio de relleno requerido por todos los lados de un elemento*/
    padding: 5px 40px;
  }
  .footer{
  /*display nos permite establecer el tipo de caja que el navegador empleará
  hace que el comportamiento del elemento sea como un bloque
  en este caso para el elemento burger-button*/
    display: block;
  /*controla la alineación de los elementos*/  
    text-align: center;
  /*Establece algunas o todas las propiedades de todos los bordes de los elementos*/
    border: 1px solid transparent;

  }
}